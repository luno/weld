{{if .Tags}}//go:build {{.Tags}}

{{end -}}
package {{.Package}}

// Code generated by weld. DO NOT EDIT.

import (
	"github.com/luno/jettison/errors"
{{range .Imports -}}
	{{if .Aliased}}{{.Name}} {{end}}"{{.PkgPath}}"
{{end}}
)

func NewTesting{{.BackendsName}}(b {{.BackendsType}}) *Testing{{.BackendsName}} {
	return &Testing{{.BackendsName}}{
		{{.BackendsName}}: b,
	}
}

type Testing{{.BackendsName}} struct {
	{{.BackendsType}}

{{range .Deps}}{{if not .IsDuplicate -}}
	{{.Var}} {{.Type}}
{{end}}{{end}}
}

{{range .Deps}}
func (ti *Testing{{$.BackendsName}}) {{.Getter}}() {{.Type}} {
    if ti.{{.Var}} != nil {
       return ti.{{.Var}}
    }

	return ti.{{$.BackendsName}}.{{.Getter}}()
}
{{end}}

{{if .TransBcks -}}
// Transitive dependency interface assertions.
var (
{{range .TransBcks -}}
	_ {{.}} = (*Testing{{$.BackendsName}})(nil)
{{end}}
)
{{end}}


{{range .Deps }}
// Set{{.Getter}}ForTesting is a runtime available override for the "{{.Var}}" dependency that should only be used for testing.
func (ti *Testing{{$.BackendsName}}) Set{{.Getter}}ForTesting(t *testing.T, {{.Var}} {{.Type}}) {
    t.Cleanup(func() {
   		ti.{{.Var}} = nil
   	})

   	ti.{{.Var}} = {{.Var}}
}
{{end}}