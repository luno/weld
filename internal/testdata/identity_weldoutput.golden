//go:build !dev

package state

// Code generated by weld. DO NOT EDIT.

import (
	"example/exchange"
	exchange_client_grpc "example/exchange/client/grpc"
	"example/external/mail"
	mail_mail "example/external/mail/mail"
	"example/identity/email"
	email_client_logical "example/identity/email/client/logical"
	email_db "example/identity/email/db"
	"example/identity/users"
	users_client_logical "example/identity/users/client/logical"
	users_db "example/identity/users/db"

	"github.com/luno/jettison/errors"
)

func MakeBackends() (Backends, error) {
	var (
		b   backendsImpl
		err error
	)

	b.email = email_client_logical.New(&b)

	b.emailDB, err = email_db.Connect()
	if err != nil {
		return nil, errors.Wrap(err, "email db connect")
	}

	b.exchange, err = exchange_client_grpc.New()
	if err != nil {
		return nil, errors.Wrap(err, "exchange client grpc new")
	}

	b.mailer, err = mail.New()
	if err != nil {
		return nil, errors.Wrap(err, "mail new")
	}

	b.mailerLegacy, err = mail_mail.New()
	if err != nil {
		return nil, errors.Wrap(err, "mail new")
	}

	b.users = users_client_logical.New(&b)

	b.usersDB, err = users_db.Connect()
	if err != nil {
		return nil, errors.Wrap(err, "users db connect")
	}

	return &b, nil
}

type backendsImpl struct {
	email        email.Client
	emailDB      *email_db.EmailDB
	exchange     exchange.Client
	mailer       *mail.Mailer
	mailerLegacy *mail_mail.MailerLegacy
	users        users.Client
	usersDB      *users_db.UsersDB
}

func (b *backendsImpl) Email() email.Client {
	return b.email
}

func (b *backendsImpl) EmailDB() *email_db.EmailDB {
	return b.emailDB
}

func (b *backendsImpl) Exchange() exchange.Client {
	return b.exchange
}

func (b *backendsImpl) Mailer() *mail.Mailer {
	return b.mailer
}

func (b *backendsImpl) MailerLegacy() *mail_mail.MailerLegacy {
	return b.mailerLegacy
}

func (b *backendsImpl) Users() users.Client {
	return b.users
}

func (b *backendsImpl) UsersDB() *users_db.UsersDB {
	return b.usersDB
}

// Transitive dependency interface assertions.
var (
	_ email_client_logical.Backends = (*backendsImpl)(nil)
	_ users_client_logical.Backends = (*backendsImpl)(nil)
)
