{{if .Tags}}//go:build {{.Tags}}

{{end -}}
package {{.Package}}

// Code generated by weld. DO NOT EDIT.

import (
	"github.com/luno/jettison/errors"
{{range .Imports -}}
	{{if .Aliased}}{{.Name}} {{end}}"{{.PkgPath}}"
{{end}}
)

func Make{{.BackendsName}}() ({{.BackendsType}}, error) {
	var (
		b backendsImpl{{if .DepsReturnErr}}
		err error{{end}}
	)

{{range .Deps }}{{if not .IsDuplicate}}
	{{.FormatVar}} {{if .Provider.ReturnsErr}}, err {{end}}= {{.Provider.FormatFunc}}({{.Provider.FormatArgs}})
{{if .Provider.ReturnsErr}}if err != nil { return nil, errors.Wrap(err, "{{.Provider.ErrWrapMsg}}") }{{end}}
{{end}}{{end}}

	return &b, nil
}

type backendsImpl struct {
{{range .Deps}}{{if not .IsDuplicate -}}
	{{.Var}} {{.Type}}
{{end}}{{end}}
}

{{range .Deps}}
func (b *backendsImpl) {{.Getter}}() {{.Type}} {
	return b.{{.Var}}
}
{{end}}

{{if .TransBcks -}}
// Transitive dependency interface assertions.
var (
{{range .TransBcks -}}
	_ {{.}} = (*backendsImpl)(nil)
{{end}}
)
{{end}}
